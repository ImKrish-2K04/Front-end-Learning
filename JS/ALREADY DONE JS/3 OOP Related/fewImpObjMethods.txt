 Object Methods:

1. Object.keys(obj):
   - Returns an array of a given object's own enumerable property names.
   ! coding example is as following:

   const obj = { a: 1, b: 2, c: 3 };
   console.log(Object.keys(obj)); // ['a', 'b', 'c']
   

2. Object.values(obj):
   - Returns an array of a given object's own enumerable property values.
   ! coding example is as following:

   const obj = { a: 1, b: 2, c: 3 };
   console.log(Object.values(obj)); // [1, 2, 3]
   

3. Object.entries(obj):
   - Returns an array of a given object's own enumerable property key-value pairs.
   ! coding example is as following:

   const obj = { a: 1, b: 2, c: 3 };
   console.log(Object.entries(obj)); // [['a', 1], ['b', 2], ['c', 3]]
   

4. Object.assign(target, ...sources):
   - Copies the values of all enumerable own properties from one or more source objects to a target object and returns the target object.
   ! coding example is as following:

   const target = { a: 1, b: 2 };
   const source = { b: 3, c: 4 };
   const merged = Object.assign(target, source);
   console.log(merged); // { a: 1, b: 3, c: 4 }
   

5. Object.hasOwnProperty(prop):
   - Returns a boolean indicating whether the object has the specified property as its own property.
   ! coding example is as following:

   const obj = { a: 1, b: 2 };
   console.log(obj.hasOwnProperty('a')); // true
   console.log(obj.hasOwnProperty('c')); // false
   

6. Object.freeze(obj):
   - Freezes an object: other code can't delete or change any properties.
   ! coding example is as following:

   const obj = { a: 1, b: 2 };
   Object.freeze(obj);
   obj.c = 3; // Error in strict mode
   

7. Object.seal(obj):
   - Prevents new properties from being added to an object and marks all existing properties as non-configurable.
   ! coding example is as following:

   const obj = { a: 1, b: 2 };
   Object.seal(obj);
   obj.c = 3; // Error in strict mode
   

8. Object.getOwnPropertyNames(obj):
   - Returns an array of all properties (enumerable or not) found directly upon a given object.
   ! coding example is as following:

   const obj = { a: 1, b: 2 };
   console.log(Object.getOwnPropertyNames(obj)); // ['a', 'b']
   

9. Object.create(proto [, propertiesObject]):
   - Creates a new object with the specified prototype object and properties.
   ! coding example is as following:

   const proto = { hello: 'world' };
   const obj = Object.create(proto);
   console.log(obj.hello); // 'world'


10. Object.prototype.hasOwnProperty(),
    Object.prototype.toString(),
    Object.prototype.valueOf(), etc.